// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int                  @id @default(autoincrement())
  name                String?
  email               String   @unique
  hashedPassword      String   @default("")
  salt                String   @default("")
  resetToken          String?
  resetTokenExpiresAt DateTime?
  bookings            Booking[]
  attendances         Attendance[]
  exceptionRequests   ExceptionRequest[]
}

model Booking {
  id        Int      @id @default(autoincrement())
  title     String
  notes     String?
  startTime DateTime
  endTime   DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Attendance {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  date      DateTime
  clockIn   DateTime?
  clockOut  DateTime?
  duration  String?
  status    String
  location  String?
}

model ExceptionRequest {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      String
  reason    String
  date      DateTime
  status    String
  createdAt DateTime @default(now())
}